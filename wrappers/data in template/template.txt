Info about template:

Template for Parser - https://github.com/Drovosek01/ReplaceHexPatcher/blob/main/wrappers/data%20in%20template/Parser.ps1

1. Lines containts 2 simbols semicolon (;;) - these lines is comment
    and these lines will be delete from full template before parse sections
2. All lines outisde sections [start-*]/[end-*] - will not extract from template
    and will not affect the sections in any way.
    In fact, the text outside the sections can be considered comments
3. File has global variable `$USER` and all these words will be replaced with current Windows username




Write variables for current template-file
It will be separated on symbol `=` and firt items before `=`
will search and replace in all sections in this file

[start-variables]
;; copied explorer.exe from C:\Windows
path_target_1 = C:\Users\$USER\AppData\Local\Temp\explorer.exe
;; copied regedit.exe from C:\Windows
path_target_2 = C:\Users\$USER\AppData\Local\Temp\regedit.exe
pattern_1 = 63 61 6E 6E 6F 74 20 62 65 20 72 75 6E 20 69 6E 20 44 4F 53|63 61 6E 20 62 65 20 72 75 6E 6E 6E 69 6E 67 20 69 6E 20 44

original_1 = 63616E6E6F742062652072756E20696E20444F53
patched_1 = 63616E2062652072756E6E6E696E6720696E2044
pattern_2 = 53006F00660074007700610072006500|42006C006F0074007700610072006500
original_2 = 53006F00660074007700610072006500
patched_2 = 42006C006F0074007700610072006500
pattern_3 = 211AFEF2606F7E0D5AB5D2109E0623AA/909090F2606F7E0D5AB5D21090909090
pattern_4 = 40503C002849503C002F013C00020EC67C1200001918080018\405787802849AABB002F013909090EC1234200001918080018
[end-variables]



Write absolute path to patcher-script to ReplaceHexBytesAll.ps1
or valid http* direct URL for download patcher-script
First exist file or valid URL will be use

[start-patcher_path_or_url]
# any data 123
more
C:\Users\$USER\ReplaceHexPatcher\core\ReplaceHexBytesAll.ps1
again
https://gist.github.com/Drovosek01/9d47068365ea0bce26526ee61b23be7c/raw/581aa5312b0f99745ca55c2646d31990a93e2ee3/ReplaceHexBytesAll.ps1      
;; коммент
[end-patcher_path_or_url]



Write paths to files then hex-patterns for find+replace bytes
After line with path to file all other lines below will be considered strings with patterns
String with pattern can contain full pattern search and replace with separator symbol
or search and replace patterns on different lines

[start-targets_and_patterns]
path_target_1
pattern_1
original_2
patched_2
pattern_3
pattern_4
;; other file
path_target_2
original_1
patched_1
[end-targets_and_patterns]



Write absolute paths to files and folders for delete it
If first line contain text `MOVE TO BIN` it mean all files or folders will move to bin
otherwise it will be deleted from system

[start-files_or_folders_delete]
MOVE TO BIN
C:\Users\$USER\AppData\Local\Temp\TestFolder123
C:\Users\$USER\AppData\Local\Temp\TestFile456
[end-files_or_folders_delete]



Write data for create text-file
First line always is absolute path to file
Second line can be "flag" with type of end of lines - CRLF or LF
Other lines - content for created file.
Empty lines will not deleted.
There may be several such sections.

[start-file_create_from_text]
C:\Users\$USER\AppData\Local\Temp\license file.lic
LF
LICENSE company product1 2099.99 permanent uncounted hostid=ANY
  issued=1-oct-2023 _ck=bc1e94b45e sig="60P0450BS5WA0G7VJPP96BBAAKB36J
  B97TSF8MG22GD0ABHFK09Q0WPNFF1543YXM0RSYN6JD4"
LICENSE company product2 2099.99 permanent uncounted hostid=ANY
  issued=1-oct-2023 _ck=c51e947507 sig="60P0451JSHX4N85D89MA8R0D8UFTNE
  NCAHCS5K822HNR6ACG1VVK6T6UXVQ9C894YY2MFGTBEC"
LICENSE company product3 2099.99 permanent uncounted hostid=ANY
  issued=1-oct-2023 _ck=321e9478d7 sig="60PG4580G7JA027QRQ9HEV39P7553R
  GBS7FK6R5M08A0QJ59X2V3VEER4TA348065RQ967481KFG"





[end-file_create_from_text]



Write data for create file with content from decoded base64-code
First line always is absolute path to file
Second line can be "flag" with type of content inside base64 - `BINARY DATA`.
If section have this flag decoded data will be represented as bytes and written to a file. Otherwise decoded data is text.
Also second line can have flag of type of end of lines - CRLF or LF.
If decoded data not binary - end of lines these text will be converted to this type of end of lines.
Other lines - content of big base64-code.
Empty lines will not deleted.
There may be several such sections.

[start-file_create_from_base64]
C:\Users\$USER\AppData\Local\Temp\file created from base64.bin
BINARY DATA
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
[end-file_create_from_base64]



[start-file_create_from_base64]
C:\Users\$USER\AppData\Local\Temp\file created from base64.txt
LF
TElDRU5TRSBmb3VuZHJ5IG1vZG9faSAyMDk5Ljk5IHBlcm1hb
mVudCB1bmNvdW50ZWQgaG9zdGlkPUFOWQ0KICBpc3N1ZWQ9MS1vY3QtMjAyMyBfY2s9
YmMxZTk0YjQ1ZSBzaWc9IjYwUDA0NTBCUzVXQTBHN1ZKUFA5NkJCQUFLQjM2Sg0KICBCOTdUU0Y4TUcyMkdEMEFCSEZLMD
lRMFdQTkZGMTU0M1lYTTBSU1lONkpENCINCkxJQ0VOU0UgZm91bmRyeSBtb2RvX3IgMjA5OS45OSBwZXJtYW5lbnQgdW5jb3VudGVkIGhvc3RpZD1BTlkNCiAgaXNzdWVkPTEtb2N0L
TIwMjMgX2NrPWM1MWU5NDc1MDcgc2lnPSI2MFAwNDUxSlNIWDROODVEODlNQThSMEQ4VUZUTkUNCiAgTkNBSENTNUs4MjJITlI2QUNHMVZWSzZUNlVYVlE5Qzg5NFlZMk1GR1RCRUMiDQpMSUNFTlNFIGZvdW5kcnkgbW9kb3ZfaSAyMDk5Ljk5IHBlcm1hbmVudCB1bmNvdW50ZWQgaG9zdGlkPUFOWQ0KICBpc3N1ZWQ9MS1vY3QtMjAyMyBfY2s9MzIxZTk0NzhkNyBzaWc9IjYwUEc0NTgwRzdKQTAyN1FSUTlIRVYzOVA3NTUzUg0KICBHQlM3Rks2UjVNMDhBMFFKNTlYMlYzVkVFUjRUQTM0ODA2NVJROTY3NDgxS0ZHIg0KDQoNCg0KDQoNCg==
[end-file_create_from_base64]



Write lines for search for delete from hosts-file
If line start with comment symbol # or start with 127.0.0.1 or start with 0.0.0.0
Line will search without modifications (but spaces will be adaptive for search)
Otherwise it mean line contain URL-word for search in hosts lines for delete line with this word
We can use star symbol * and it will be replaced with `.*` and used like regex within the boundaries of the word

[start-hosts_remove]
# Just some title
0.0.0.0                  anysute.com
site.com*
sdjfhksdf.com
ij.sddddwr.ru
bdj.sdfsdf.ss
*adobe.io*
[end-hosts_remove]



Write lines for add to hosts-file.
If line start with comment symbol # or start with 127.0.0.1 or start with 0.0.0.0
Line will add to hosts without modifications
Otherwise it mean line contain URL for block and before URL-address
will be added `0.0.0.0 `

[start-hosts_add]
# Just some title
anysute.com
sdjfhksdf.com
ij.sddddwr.ru
bdj.sdfsdf.ss
[end-hosts_add]



Write lines with absolute paths for .exe-files
and all rules with these exe-files will be deleted from Windows Firewall

[start-firewall_remove_block]
path_target_1
path_target_2
C:\Users\$USER\AppData\Local\Temp\Test Folder\*.exe
C:\Users\$USER\AppData\Local\Temp\Test Folder with subfolders\*

[end-firewall_remove_block]



Write lines with absolute paths for .exe-files
and for all these exe-files will be added rules in Windows Firewall for block all connections
Also we can write path for folder with end path like `\*` it mean block all exe-files in this folder and all subfolders
but if it ends like `\*.exe` it mean block all exe-files only in this folder

[start-firewall_block]
path_target_1
path_target_2
C:\Users\$USER\AppData\Local\Temp\Test Folder\*.exe
C:\Users\$USER\AppData\Local\Temp\Test Folder with subfolders\*
[end-firewall_block]



Write same lines like in .reg-file and it will be executed/applied to Windows Registry
First line section can skip text Windows Registry Editor Version 5.00
and Parser will add it dynamicly

[start-registry_file]

;
; Этот файл должен быть в кодировке UTF-16 LE с BOM, чтобы слова на кириллице в контекстном меню не отображались кракозябрами
;

;
;
; Настройка Проводника
;
;

; Включить отображение расширений файлов
[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced]
"HideFileExt"=dword:00000000

;Выключение сохранения списков открывавшихся файлов
;В проводнике это делается через параметры и снятие 1 галки в разделе Конфеденциальность
;Показать недавно использовавшиеся файлы на панели быстрого доступа
[HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer]
"NoRecentDocsHistory"=dword:00000001
[end-registry_file]



Write Powershell-code and will be created temp .ps1-file with this code and will be executed

[start-powershell_code]
$tempFile = [System.IO.Path]::GetTempFileName() + '.txt'
[void](New-Item -Path $tempFile -ItemType File -Force -ErrorAction Stop)
Add-Content -Path $tempFile -Value "test`ntext"
write-host 'DONE'
write-host 'file is' $tempFile
Remove-Item -Path $tempFile -Force
[end-powershell_code]



Write CMD-code and will be created temp .cmd-file with this code and will be executed

[start-cmd_code]
@echo off
set "testtext=Some text for echo"
set "filepath=C:\Users\%USERNAME%\AppData\Local\Temp\testfile.txt"
echo %testtext% > %filepath%
echo "GOOOOOOOOOOT IT теперь удалить"
pause
del %filepath%
[end-cmd_code]